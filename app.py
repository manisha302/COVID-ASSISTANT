# -*- coding: utf-8 -*-
"""app

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jtNvEMuExo6b3jVRlwroirPxvrUrzXhe
"""

import numpy as np
from sklearn.preprocessing import MinMaxScaler
from flask import Flask, request, jsonify, render_template
import pickle

app = Flask(__name__)
model = pickle.load(open('model.pkl', 'rb'))

@app.route('/')
def home():
    return render_template('index.html')

@app.route('/predict',methods=['POST'])
def predict():
    '''
    For rendering results on HTML GUI
    '''
    int_features = [float(x) for x in request.form.values()]
    final_features = [np.array(int_features)]
    scaler=MinMaxScaler()
    x=scaler.fit_transform(x)
    prediction = model.predict(final_features)

    output = round(prediction[0], 2)

    return render_template('index.html', predicting_life_expectancy='Employee Salary should be $ {}'.format(output))

#@app.route('/predict_api',methods=['POST'])
#def predict_api():

#    data = request.get_json(force=True)
#    prediction = model.predict([np.array(list(data.values()))])

#    output = prediction[0]
#    return jsonify(output)


if __name__ == "__main__":
    app.run(debug=True)
